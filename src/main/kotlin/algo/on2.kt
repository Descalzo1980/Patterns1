package algo

fun main(){
    val int = 10
    val result = getMultiplyList(int)
    println(result)
}

fun getMultiplyList(n: Int) {
    for (i in 1..n) {
        for (j in 1..n) {
            println("$i * $j = ${i * j}")
        }
    }
}

/*Константная сложность (O(1)) :
Примером является функция, которая всегда выполняется за
постоянное время независимо от размера входных данных.
Это может быть операция получения последнего элемента массива.

Линейная сложность (O(n)) :
Функции, время выполнения которых линейно зависит от
количества входных данных. Пример - суммирование всех
элементов массива.

Логарифмическая сложность (O(log n)) :
Описывает алгоритмы, время выполнения которых
увеличивается логарифмически по размеру входных данных.
Пример - бинарный поиск.

Квадратичная сложность (O(n^2)) :
Алгоритмы, время выполнения которых пропорционально
квадрату количества входных данных.
Это может быть двойной цикл, перебирающий все
пары элементов массива.

Факториальная сложность (O(n!)) :
Самая быстрорастущая сложность, используемая, например,
для задач комбинаторики. Пример - перебор всех перестановок
или комбинаций.*/